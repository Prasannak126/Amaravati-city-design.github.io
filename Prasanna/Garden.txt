#include <iostream>
#include <vector>
#include <string>
using namespace std;

// Define a structure for Node
struct Node {
    string name;
    int id;
};

// Define a structure for Edge
struct Edge {
    int src, dest;
    int distance;
    int sensitivity;
    int weight;
};

int main() {
    // Define nodes
    vector<Node> nodes = {
        {"Entrance", 0},
        {"A", 1},
        {"B", 2},
        {"C", 3},
        {"D", 4},
        {"E", 5},
        {"F", 6}
    };

    // Define edges with distance, sensitivity, and computed weight (distance + sensitivity)
    vector<Edge> edges = {
        {0, 1, 100, 1, 101}, // EA
        {0, 2, 150, 2, 152}, // EB
        {0, 3, 80,  1, 81},  // EC
        {0, 4, 200, 3, 203}, // ED
        {1, 2, 50,  1, 51},  // AB
        {1, 3, 120, 2, 122}, // AC
        {1, 4, 180, 3, 183}, // AD
        {2, 3, 70,  1, 71},  // BC
        {2, 4, 100, 2, 102}, // BD
        {2, 5, 150, 1, 151}, // BE
        {3, 6, 80,  1, 81},  // CF
        {4, 6, 120, 2, 122}  // DF
    };

    // Output the nodes
    cout << "Nodes:" << endl;
    for (const Node &node : nodes) {
        cout << "Node Name: " << node.name << ", ID: " << node.id << endl;
    }
    cout << endl;

    // Output the edges
    cout << "Edges (with Distance, Sensitivity, and Weight):" << endl;
    for (const Edge &edge : edges) {
        cout << "Src: " << edge.src << ", Dest: " << edge.dest
             << ", Distance: " << edge.distance << "m"
             << ", Sensitivity: " << edge.sensitivity
             << ", Weight: " << edge.weight << endl;
    }

    return 0;
}
